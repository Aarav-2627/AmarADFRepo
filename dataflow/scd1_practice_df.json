{
	"name": "scd1_practice_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "SqlServer1",
						"type": "LinkedServiceReference"
					},
					"name": "emps"
				},
				{
					"linkedService": {
						"referenceName": "SqlServer1",
						"type": "LinkedServiceReference"
					},
					"name": "empt"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPNO as long,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as long,",
				"          HIREDATE as timestamp,",
				"          SAL as long,",
				"          COMM as long,",
				"          DEPTNO as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from [dbo].[Emp]',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> emps",
				"source(output(",
				"          EMPNO as long,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as long,",
				"          HIREDATE as timestamp,",
				"          SAL as long,",
				"          COMM as long,",
				"          DEPTNO as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from [dbo].[Emp_t]',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> empt",
				"emps, empt exists(emps@EMPNO == empt@EMPNO,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 derive(flag = 'Inserted') ~> derivedColumn1"
			]
		}
	}
}